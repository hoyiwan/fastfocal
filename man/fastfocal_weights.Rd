% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fastfocal_weights.R
\name{fastfocal_weights}
\alias{fastfocal_weights}
\title{Generate weight matrix for focal operations using map units}
\usage{
fastfocal_weights(x, d, w = "circle", normalize = TRUE, plot = FALSE)
}
\arguments{
\item{x}{SpatRaster. Used to determine resolution (assumes square pixels).}

\item{d}{numeric. Radius in map units.}

\item{w}{character. One of:
"rectangle","circle","circular","gaussian","Gauss","pareto","idw",
"exponential","triangular","cosine","logistic","cauchy","quartic","epanechnikov".}

\item{normalize}{logical. If \code{TRUE} (default), normalize weights so they sum to 1.}

\item{plot}{logical. If \code{TRUE}, plots the kernel.}
}
\value{
A numeric matrix of focal weights (unnormalized unless \code{normalize = TRUE}).
}
\description{
Builds an unnormalized kernel from map units. The circular window uses a
center-distance rule (a cell is included if its center lies within radius \code{d});
other kernels follow the definitions below. For exact equality with the
discrete circle produced by the \pkg{terra} package, you may alternatively
pass \code{w = terra::focalMat(x, d, type = "circle")} directly into
\code{\link[=fastfocal]{fastfocal()}}.
}
\examples{
# Small, fast example (no plotting)
library(terra)
r <- rast(nrows = 9, ncols = 9, xmin = 0, xmax = 90, ymin = 0, ymax = 90)
k <- fastfocal_weights(r, d = 30, w = "circle", normalize = TRUE)
sum(k)  # equals 1 when normalize = TRUE
}
